<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <SolidColorBrush x:Key="Border">#00aeff</SolidColorBrush>
  <SolidColorBrush x:Key="Background">#e4f6ff</SolidColorBrush>
  <SolidColorBrush x:Key="Foreground">#0087c6</SolidColorBrush>

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

  <Style TargetType="Button" x:Key="ButtonStyle">
    <Setter Property="Margin" Value="5" />
    <Setter Property="BorderBrush" Value="{StaticResource Border}" />
    <Setter Property="Background" Value="{StaticResource Background}" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border CornerRadius="0" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" x:Name="Border"
                  TextBlock.Foreground="#0087c6" Background="{TemplateBinding Background}">
            <ContentPresenter Margin="2" Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.5" />
                  <VisualTransition GeneratedDuration="0" To="Pressed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="#fff" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="#00aeff" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="#ccc" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="Margin" Value="5" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#00aeff"
                  x:Name="Border" TextBlock.Foreground="#0087c6" Background="#e4f6ff">
            <ScrollViewer Margin="0,3,0,0" x:Name="PART_ContentHost" />

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.5" />
                  <VisualTransition GeneratedDuration="0" To="Pressed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="#fff" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="#ccc" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <Path x:Name="Arrow" Grid.Column="1" Fill="#00aeff" HorizontalAlignment="Center" VerticalAlignment="Center"
            Data="M 0 0 L 4 4 L 8 0 Z" />
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
  </ControlTemplate>

  <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Border CornerRadius="0" BorderThickness="0,0,0,1" BorderBrush="#00aeff" x:Name="Border"
                  TextBlock.Foreground="#0087c6" Background="#e4f6ff">
            <Grid>
              <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2"
                            Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"></ToggleButton>
              <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
              <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                       Margin="3,3,23,3" Focusable="True" Background="Transparent" BorderThickness="0" Visibility="Hidden"
                       IsReadOnly="{TemplateBinding IsReadOnly}" />
              <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                     AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                  <Border x:Name="DropDownBorder" Background="#e4f6ff" BorderThickness="1" Border.CornerRadius="0"
                          BorderBrush="#00aeff" />
                  <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="#e4f6ff" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
              <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
              <Setter Property="IsTabStop" Value="false" />
              <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
              <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers></Style.Triggers>
  </Style>

  <ControlTemplate x:Key="ExpanderButton" TargetType="ToggleButton">
    <ContentPresenter />
  </ControlTemplate>

  <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border Name="Border" BorderThickness="0,1,0,0" BorderBrush="Transparent" Padding="2"
                  SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource Border}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Foreground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type Label}" TargetType="Label">
    <Setter Property="Foreground" Value="{StaticResource Foreground}" />
  </Style>

  <Style x:Key="ListBoxLabel" TargetType="Label">
    <Setter Property="Foreground" Value="{StaticResource Foreground}" />
    <Style.Triggers>
      <DataTrigger Value="true">
        <DataTrigger.Binding>
          <Binding Path="IsSelected">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type ListBoxItem}" />
            </Binding.RelativeSource>
          </Binding>
        </DataTrigger.Binding>
        <Setter Property="Foreground" Value="#fff" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type ToolBar}" TargetType="ToolBar">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolBar">
          <Border Name="Border" Background="#efefef" BorderThickness="0,0,0,3" BorderBrush="{StaticResource Border}"
                  Padding="2" SnapsToDevicePixels="true">
            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToolButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Label.FontWeight" Value="Bold" />
  </Style>

  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource ToolButtonStyle}"
         TargetType="{x:Type Button}" />

  <Style x:Key="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />

  <!-- Contact list -->

  <DataTemplate x:Key="ContactTemplate">
    <Label Content="{Binding Name}" Style="{StaticResource ListBoxLabel}" />
  </DataTemplate>

  <DataTemplate x:Key="GroupHeaderTemplate">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Name="ContentRow" Height="Auto" />
      </Grid.RowDefinitions>
      <ToggleButton Grid.Row="0" Name="Toggle" Background="Transparent" Margin="3,3,0,2"
                    Template="{StaticResource ExpanderButton}" TextBlock.Foreground="{StaticResource Foreground}" Content="{Binding Name}" />
      <Border Name="Content" Grid.Row="1" Margin="0,3,0,0" BorderBrush="{StaticResource Border}"
              BorderThickness="0,3,0,0"></Border>
    </Grid>
  </DataTemplate>

</ResourceDictionary>